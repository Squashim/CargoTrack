// <auto-generated />
using System;
using CargoTrack.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CargoTrack.Api.Migrations
{
    [DbContext(typeof(CargoTrackDbContext))]
    [Migration("20240516083344_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CargoTrack.Api.Entities.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("accounttypeid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("accounttype");
                });

            modelBuilder.Entity("CargoTrack.Api.Entities.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adresid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("cityid");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("integer")
                        .HasColumnName("housenubmer");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("postalcode");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("streetname");

                    b.HasKey("Id");

                    b.ToTable("adres");
                });

            modelBuilder.Entity("CargoTrack.Api.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cityid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("CityId");

                    b.ToTable("city");
                });

            modelBuilder.Entity("CargoTrack.Api.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("companyid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("companyname");

                    b.Property<string>("Nip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nip");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("CargoTrack.Api.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("countryid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("countryname");

                    b.HasKey("Id");

                    b.ToTable("country");
                });

            modelBuilder.Entity("CargoTrack.Api.Entities.ShipmentOrder", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("shipmentid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShipmentId"));

                    b.Property<int>("AdresId")
                        .HasColumnType("integer")
                        .HasColumnName("adresid");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer")
                        .HasColumnName("companyid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<DateTime>("ShipmentEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("shipmentEnd");

                    b.Property<DateTime>("ShipmentStart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("shipmentstart");

                    b.Property<int>("ShipmentStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("shipmentstatusid");

                    b.HasKey("ShipmentId");

                    b.ToTable("shipmentorder");
                });

            modelBuilder.Entity("CargoTrack.Api.Entities.ShipmentStatus", b =>
                {
                    b.Property<int>("ShipmentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("shipmentstatusid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShipmentStatusId"));

                    b.Property<string>("ShipmentStatusName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shipmentstatusname");

                    b.HasKey("ShipmentStatusId");

                    b.ToTable("shipmentstatus");
                });

            modelBuilder.Entity("CargoTrack.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("accounttypeid");

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer")
                        .HasColumnName("vehicleid");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CargoTrack.Api.Entities.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vechicleid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mark");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<DateOnly>("ProductionDate")
                        .HasColumnType("date")
                        .HasColumnName("productiondate");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vin");

                    b.HasKey("VehicleId");

                    b.ToTable("vehicle");
                });

            modelBuilder.Entity("CargoTrack.Api.Entities.User", b =>
                {
                    b.HasOne("CargoTrack.Api.Entities.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");
                });
#pragma warning restore 612, 618
        }
    }
}
